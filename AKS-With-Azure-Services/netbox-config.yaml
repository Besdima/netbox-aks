apiVersion: v1
kind: ConfigMap
metadata:
  name: netbox-configmap
  namespace: netbox
data:
  # NetBox environment variables
  # More configuration can be added via: https://netbox.readthedocs.io/en/stable/configuration/optional-settings/
  ALLOWED_HOSTS: '*'
  CHANGELOG_RETENTION: "90"
  DB_HOST: psql-netbox.postgres.database.azure.com
  DB_NAME: netbox
  LOGIN_REQUIRED: "true"
  MEDIA_ROOT: /opt/netbox/netbox/media
  METRICS_ENABLED: "true"
  REDIS_HOST: netbox-redis.redis
  REDIS_CACHE_HOST: netbox-redis.redis
  REDIS_PORT: "6379"
  REDIS_CACHE_PORT: "6379"
  REDIS_DATABASE: "0"
  REDIS_CACHE_DATABASE: "1"
  MAINTENANCE_MODE: 'False'
  DEBUG: 'False'
  LOGLEVEL: 'INFO'
  REMOTE_AUTH_ENABLED: "True"
  REMOTE_AUTH_AUTO_CREATE_USER: "True"
  REMOTE_AUTH_BACKEND: netbox.authentication.LDAPBackend
  REMOTE_AUTH_SUPERUSER_GROUPS: "Netbox-admin"
  AUTH_LDAP_SERVER_URI: "ldaps://adds001.besdima.dev"
  AUTH_LDAP_BIND_DN: "CN=svc_netbox,DC=besdima,DC=dev"
  AUTH_LDAP_USER_SEARCH_BASEDN: "DC=besdima,DC=dev"
  AUTH_LDAP_GROUP_SEARCH_BASEDN: "OU=Groups,DC=besdima,DC=dev"
  AUTH_LDAP_REQUIRE_GROUP_DN: "CN=Netbox-user,OU=Groups,DC=besdima,DC=dev"
  AUTH_LDAP_IS_ADMIN_DN: "CN=Netbox-user,OU=Groups,DC=besdima,DC=dev"
  AUTH_LDAP_IS_SUPERUSER_DN: "CN=Netbox-admin,OU=Groups,DC=besdima,DC=dev"
  AUTH_LDAP_GROUP_TYPE: "NestedGroupOfNamesType"
  AUTH_LDAP_MIRROR_GROUPS: "true"
  AUTH_LDAP_FIND_GROUP_PERMS: "true"
  AUTH_LDAP_CACHE_GROUPS: "true"
  AUTH_LDAP_GROUP_CACHE_TIMEOUT: "1800"
  LDAP_IGNORE_CERT_ERRORS: "true"


  logging.py: |
    # Remove first comment(#) on each line to implement this working logging example.
    # Add LOGLEVEL environment variable to netbox if you use this example & want a different log level.
    from os import environ

    # Set LOGLEVEL in netbox.env or docker-compose.overide.yml to override a logging level of INFO.
    LOGLEVEL = environ.get('LOGLEVEL', 'INFO')

    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'formatters': {
            'verbose': {
                'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
                'style': '{',
            },
            'simple': {
                'format': '{levelname} {message}',
                'style': '{',
            },
        },
        'filters': {
            'require_debug_false': {
                '()': 'django.utils.log.RequireDebugFalse',
            },
        },
        'handlers': {
            'console': {
                'level': LOGLEVEL,
                'filters': ['require_debug_false'],
                'class': 'logging.StreamHandler',
                'formatter': 'simple'
            },
            'mail_admins': {
                'level': 'ERROR',
                'class': 'django.utils.log.AdminEmailHandler',
                'filters': ['require_debug_false']
            }
        },
        'loggers': {
            'django': {
                'handlers': ['console'],
                'propagate': True,
            },
            'django.request': {
                'handlers': ['mail_admins'],
                'level': 'ERROR',
                'propagate': False,
            },
            'django_auth_ldap': {
                'handlers': ['console',],
                'level': LOGLEVEL,
            }
        }
    }